apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.3"
    defaultConfig {
        applicationId "com.example.ndktest"
        minSdkVersion 15
        targetSdkVersion 21
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        ndk {
            abiFilters "armeabi"
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets{
        main{
            jniLibs.srcDirs = ['libs']
            jni.srcDirs = []
        }
    }
    externalNativeBuild {
        ndkBuild {
            path "src/main/jni/Android.mk"
        }
    }
}

// 编译NDK代码
task ndkBuild(type: Exec, description: 'Compile JNI source via NDK') {

    def androidMK = "$projectDir/src/main/jni/Android.mk"
    def applicationMK = "$projectDir/src/main/jni/Application.mk"

    def stream = project.rootProject.file('local.properties').newDataInputStream()
    Properties properties = new Properties()
    properties.load(stream)
    def ndkDir = properties.get('ndk.dir')

    def cmd = ["$ndkDir/ndk-build", "NDK_PROJECT_PATH=$projectDir",  "NDK_DEBUG=1",
               "APP_BUILD_SCRIPT=$androidMK", "NDK_APPLICATION_MK=$applicationMK"]

    // commandLine  'ndk-build.cmd', '-C', file('src/main').absolutePath;

    println(cmd)
    commandLine cmd
}


tasks.withType(JavaCompile) {
    compileTask -> compileTask.dependsOn ndkBuild
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'
}
